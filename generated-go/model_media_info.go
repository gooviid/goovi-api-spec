/*
GOOVE

GOOVI API Design Spec

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// MediaInfo struct for MediaInfo
type MediaInfo struct {
	CreatedAt *time.Time `json:"created_at,omitempty"`
	Mime *string `json:"mime,omitempty"`
	Size *int32 `json:"size,omitempty"`
	SizeHuman *string `json:"size_human,omitempty"`
	RemoteUrl *string `json:"remote_url,omitempty"`
	RemoteRelativeUrl *string `json:"remote_relative_url,omitempty"`
	Video NullableVideoInfo `json:"video,omitempty"`
	Audio NullableAudioInfo `json:"audio,omitempty"`
	Image NullableImageInfo `json:"image,omitempty"`
}

// NewMediaInfo instantiates a new MediaInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMediaInfo() *MediaInfo {
	this := MediaInfo{}
	return &this
}

// NewMediaInfoWithDefaults instantiates a new MediaInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMediaInfoWithDefaults() *MediaInfo {
	this := MediaInfo{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *MediaInfo) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaInfo) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *MediaInfo) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *MediaInfo) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetMime returns the Mime field value if set, zero value otherwise.
func (o *MediaInfo) GetMime() string {
	if o == nil || o.Mime == nil {
		var ret string
		return ret
	}
	return *o.Mime
}

// GetMimeOk returns a tuple with the Mime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaInfo) GetMimeOk() (*string, bool) {
	if o == nil || o.Mime == nil {
		return nil, false
	}
	return o.Mime, true
}

// HasMime returns a boolean if a field has been set.
func (o *MediaInfo) HasMime() bool {
	if o != nil && o.Mime != nil {
		return true
	}

	return false
}

// SetMime gets a reference to the given string and assigns it to the Mime field.
func (o *MediaInfo) SetMime(v string) {
	o.Mime = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *MediaInfo) GetSize() int32 {
	if o == nil || o.Size == nil {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaInfo) GetSizeOk() (*int32, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *MediaInfo) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *MediaInfo) SetSize(v int32) {
	o.Size = &v
}

// GetSizeHuman returns the SizeHuman field value if set, zero value otherwise.
func (o *MediaInfo) GetSizeHuman() string {
	if o == nil || o.SizeHuman == nil {
		var ret string
		return ret
	}
	return *o.SizeHuman
}

// GetSizeHumanOk returns a tuple with the SizeHuman field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaInfo) GetSizeHumanOk() (*string, bool) {
	if o == nil || o.SizeHuman == nil {
		return nil, false
	}
	return o.SizeHuman, true
}

// HasSizeHuman returns a boolean if a field has been set.
func (o *MediaInfo) HasSizeHuman() bool {
	if o != nil && o.SizeHuman != nil {
		return true
	}

	return false
}

// SetSizeHuman gets a reference to the given string and assigns it to the SizeHuman field.
func (o *MediaInfo) SetSizeHuman(v string) {
	o.SizeHuman = &v
}

// GetRemoteUrl returns the RemoteUrl field value if set, zero value otherwise.
func (o *MediaInfo) GetRemoteUrl() string {
	if o == nil || o.RemoteUrl == nil {
		var ret string
		return ret
	}
	return *o.RemoteUrl
}

// GetRemoteUrlOk returns a tuple with the RemoteUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaInfo) GetRemoteUrlOk() (*string, bool) {
	if o == nil || o.RemoteUrl == nil {
		return nil, false
	}
	return o.RemoteUrl, true
}

// HasRemoteUrl returns a boolean if a field has been set.
func (o *MediaInfo) HasRemoteUrl() bool {
	if o != nil && o.RemoteUrl != nil {
		return true
	}

	return false
}

// SetRemoteUrl gets a reference to the given string and assigns it to the RemoteUrl field.
func (o *MediaInfo) SetRemoteUrl(v string) {
	o.RemoteUrl = &v
}

// GetRemoteRelativeUrl returns the RemoteRelativeUrl field value if set, zero value otherwise.
func (o *MediaInfo) GetRemoteRelativeUrl() string {
	if o == nil || o.RemoteRelativeUrl == nil {
		var ret string
		return ret
	}
	return *o.RemoteRelativeUrl
}

// GetRemoteRelativeUrlOk returns a tuple with the RemoteRelativeUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaInfo) GetRemoteRelativeUrlOk() (*string, bool) {
	if o == nil || o.RemoteRelativeUrl == nil {
		return nil, false
	}
	return o.RemoteRelativeUrl, true
}

// HasRemoteRelativeUrl returns a boolean if a field has been set.
func (o *MediaInfo) HasRemoteRelativeUrl() bool {
	if o != nil && o.RemoteRelativeUrl != nil {
		return true
	}

	return false
}

// SetRemoteRelativeUrl gets a reference to the given string and assigns it to the RemoteRelativeUrl field.
func (o *MediaInfo) SetRemoteRelativeUrl(v string) {
	o.RemoteRelativeUrl = &v
}

// GetVideo returns the Video field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaInfo) GetVideo() VideoInfo {
	if o == nil || o.Video.Get() == nil {
		var ret VideoInfo
		return ret
	}
	return *o.Video.Get()
}

// GetVideoOk returns a tuple with the Video field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaInfo) GetVideoOk() (*VideoInfo, bool) {
	if o == nil {
		return nil, false
	}
	return o.Video.Get(), o.Video.IsSet()
}

// HasVideo returns a boolean if a field has been set.
func (o *MediaInfo) HasVideo() bool {
	if o != nil && o.Video.IsSet() {
		return true
	}

	return false
}

// SetVideo gets a reference to the given NullableVideoInfo and assigns it to the Video field.
func (o *MediaInfo) SetVideo(v VideoInfo) {
	o.Video.Set(&v)
}
// SetVideoNil sets the value for Video to be an explicit nil
func (o *MediaInfo) SetVideoNil() {
	o.Video.Set(nil)
}

// UnsetVideo ensures that no value is present for Video, not even an explicit nil
func (o *MediaInfo) UnsetVideo() {
	o.Video.Unset()
}

// GetAudio returns the Audio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaInfo) GetAudio() AudioInfo {
	if o == nil || o.Audio.Get() == nil {
		var ret AudioInfo
		return ret
	}
	return *o.Audio.Get()
}

// GetAudioOk returns a tuple with the Audio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaInfo) GetAudioOk() (*AudioInfo, bool) {
	if o == nil {
		return nil, false
	}
	return o.Audio.Get(), o.Audio.IsSet()
}

// HasAudio returns a boolean if a field has been set.
func (o *MediaInfo) HasAudio() bool {
	if o != nil && o.Audio.IsSet() {
		return true
	}

	return false
}

// SetAudio gets a reference to the given NullableAudioInfo and assigns it to the Audio field.
func (o *MediaInfo) SetAudio(v AudioInfo) {
	o.Audio.Set(&v)
}
// SetAudioNil sets the value for Audio to be an explicit nil
func (o *MediaInfo) SetAudioNil() {
	o.Audio.Set(nil)
}

// UnsetAudio ensures that no value is present for Audio, not even an explicit nil
func (o *MediaInfo) UnsetAudio() {
	o.Audio.Unset()
}

// GetImage returns the Image field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaInfo) GetImage() ImageInfo {
	if o == nil || o.Image.Get() == nil {
		var ret ImageInfo
		return ret
	}
	return *o.Image.Get()
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaInfo) GetImageOk() (*ImageInfo, bool) {
	if o == nil {
		return nil, false
	}
	return o.Image.Get(), o.Image.IsSet()
}

// HasImage returns a boolean if a field has been set.
func (o *MediaInfo) HasImage() bool {
	if o != nil && o.Image.IsSet() {
		return true
	}

	return false
}

// SetImage gets a reference to the given NullableImageInfo and assigns it to the Image field.
func (o *MediaInfo) SetImage(v ImageInfo) {
	o.Image.Set(&v)
}
// SetImageNil sets the value for Image to be an explicit nil
func (o *MediaInfo) SetImageNil() {
	o.Image.Set(nil)
}

// UnsetImage ensures that no value is present for Image, not even an explicit nil
func (o *MediaInfo) UnsetImage() {
	o.Image.Unset()
}

func (o MediaInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.Mime != nil {
		toSerialize["mime"] = o.Mime
	}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	if o.SizeHuman != nil {
		toSerialize["size_human"] = o.SizeHuman
	}
	if o.RemoteUrl != nil {
		toSerialize["remote_url"] = o.RemoteUrl
	}
	if o.RemoteRelativeUrl != nil {
		toSerialize["remote_relative_url"] = o.RemoteRelativeUrl
	}
	if o.Video.IsSet() {
		toSerialize["video"] = o.Video.Get()
	}
	if o.Audio.IsSet() {
		toSerialize["audio"] = o.Audio.Get()
	}
	if o.Image.IsSet() {
		toSerialize["image"] = o.Image.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMediaInfo struct {
	value *MediaInfo
	isSet bool
}

func (v NullableMediaInfo) Get() *MediaInfo {
	return v.value
}

func (v *NullableMediaInfo) Set(val *MediaInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMediaInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMediaInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMediaInfo(val *MediaInfo) *NullableMediaInfo {
	return &NullableMediaInfo{value: val, isSet: true}
}

func (v NullableMediaInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMediaInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


