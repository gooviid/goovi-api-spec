/*
GOOVE

GOOVI API Design Spec

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VideoInfo struct for VideoInfo
type VideoInfo struct {
	IsHdr *bool `json:"is_hdr,omitempty"`
	IsMultiChannelAudio *bool `json:"is_multi_channel_audio,omitempty"`
	Width *int32 `json:"width,omitempty"`
	Height *int32 `json:"height,omitempty"`
	Fps *float32 `json:"fps,omitempty"`
	CodecName *string `json:"codec_name,omitempty"`
	CodecType *string `json:"codec_type,omitempty"`
	ResolutionHuman *string `json:"resolution_human,omitempty"`
	Bitrate *string `json:"bitrate,omitempty"`
	DisplayAspectRation *string `json:"display_aspect_ration,omitempty"`
	AspectRatio *float32 `json:"aspect_ratio,omitempty"`
	Duration *float32 `json:"duration,omitempty"`
}

// NewVideoInfo instantiates a new VideoInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVideoInfo() *VideoInfo {
	this := VideoInfo{}
	return &this
}

// NewVideoInfoWithDefaults instantiates a new VideoInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVideoInfoWithDefaults() *VideoInfo {
	this := VideoInfo{}
	return &this
}

// GetIsHdr returns the IsHdr field value if set, zero value otherwise.
func (o *VideoInfo) GetIsHdr() bool {
	if o == nil || o.IsHdr == nil {
		var ret bool
		return ret
	}
	return *o.IsHdr
}

// GetIsHdrOk returns a tuple with the IsHdr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoInfo) GetIsHdrOk() (*bool, bool) {
	if o == nil || o.IsHdr == nil {
		return nil, false
	}
	return o.IsHdr, true
}

// HasIsHdr returns a boolean if a field has been set.
func (o *VideoInfo) HasIsHdr() bool {
	if o != nil && o.IsHdr != nil {
		return true
	}

	return false
}

// SetIsHdr gets a reference to the given bool and assigns it to the IsHdr field.
func (o *VideoInfo) SetIsHdr(v bool) {
	o.IsHdr = &v
}

// GetIsMultiChannelAudio returns the IsMultiChannelAudio field value if set, zero value otherwise.
func (o *VideoInfo) GetIsMultiChannelAudio() bool {
	if o == nil || o.IsMultiChannelAudio == nil {
		var ret bool
		return ret
	}
	return *o.IsMultiChannelAudio
}

// GetIsMultiChannelAudioOk returns a tuple with the IsMultiChannelAudio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoInfo) GetIsMultiChannelAudioOk() (*bool, bool) {
	if o == nil || o.IsMultiChannelAudio == nil {
		return nil, false
	}
	return o.IsMultiChannelAudio, true
}

// HasIsMultiChannelAudio returns a boolean if a field has been set.
func (o *VideoInfo) HasIsMultiChannelAudio() bool {
	if o != nil && o.IsMultiChannelAudio != nil {
		return true
	}

	return false
}

// SetIsMultiChannelAudio gets a reference to the given bool and assigns it to the IsMultiChannelAudio field.
func (o *VideoInfo) SetIsMultiChannelAudio(v bool) {
	o.IsMultiChannelAudio = &v
}

// GetWidth returns the Width field value if set, zero value otherwise.
func (o *VideoInfo) GetWidth() int32 {
	if o == nil || o.Width == nil {
		var ret int32
		return ret
	}
	return *o.Width
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoInfo) GetWidthOk() (*int32, bool) {
	if o == nil || o.Width == nil {
		return nil, false
	}
	return o.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (o *VideoInfo) HasWidth() bool {
	if o != nil && o.Width != nil {
		return true
	}

	return false
}

// SetWidth gets a reference to the given int32 and assigns it to the Width field.
func (o *VideoInfo) SetWidth(v int32) {
	o.Width = &v
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *VideoInfo) GetHeight() int32 {
	if o == nil || o.Height == nil {
		var ret int32
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoInfo) GetHeightOk() (*int32, bool) {
	if o == nil || o.Height == nil {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *VideoInfo) HasHeight() bool {
	if o != nil && o.Height != nil {
		return true
	}

	return false
}

// SetHeight gets a reference to the given int32 and assigns it to the Height field.
func (o *VideoInfo) SetHeight(v int32) {
	o.Height = &v
}

// GetFps returns the Fps field value if set, zero value otherwise.
func (o *VideoInfo) GetFps() float32 {
	if o == nil || o.Fps == nil {
		var ret float32
		return ret
	}
	return *o.Fps
}

// GetFpsOk returns a tuple with the Fps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoInfo) GetFpsOk() (*float32, bool) {
	if o == nil || o.Fps == nil {
		return nil, false
	}
	return o.Fps, true
}

// HasFps returns a boolean if a field has been set.
func (o *VideoInfo) HasFps() bool {
	if o != nil && o.Fps != nil {
		return true
	}

	return false
}

// SetFps gets a reference to the given float32 and assigns it to the Fps field.
func (o *VideoInfo) SetFps(v float32) {
	o.Fps = &v
}

// GetCodecName returns the CodecName field value if set, zero value otherwise.
func (o *VideoInfo) GetCodecName() string {
	if o == nil || o.CodecName == nil {
		var ret string
		return ret
	}
	return *o.CodecName
}

// GetCodecNameOk returns a tuple with the CodecName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoInfo) GetCodecNameOk() (*string, bool) {
	if o == nil || o.CodecName == nil {
		return nil, false
	}
	return o.CodecName, true
}

// HasCodecName returns a boolean if a field has been set.
func (o *VideoInfo) HasCodecName() bool {
	if o != nil && o.CodecName != nil {
		return true
	}

	return false
}

// SetCodecName gets a reference to the given string and assigns it to the CodecName field.
func (o *VideoInfo) SetCodecName(v string) {
	o.CodecName = &v
}

// GetCodecType returns the CodecType field value if set, zero value otherwise.
func (o *VideoInfo) GetCodecType() string {
	if o == nil || o.CodecType == nil {
		var ret string
		return ret
	}
	return *o.CodecType
}

// GetCodecTypeOk returns a tuple with the CodecType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoInfo) GetCodecTypeOk() (*string, bool) {
	if o == nil || o.CodecType == nil {
		return nil, false
	}
	return o.CodecType, true
}

// HasCodecType returns a boolean if a field has been set.
func (o *VideoInfo) HasCodecType() bool {
	if o != nil && o.CodecType != nil {
		return true
	}

	return false
}

// SetCodecType gets a reference to the given string and assigns it to the CodecType field.
func (o *VideoInfo) SetCodecType(v string) {
	o.CodecType = &v
}

// GetResolutionHuman returns the ResolutionHuman field value if set, zero value otherwise.
func (o *VideoInfo) GetResolutionHuman() string {
	if o == nil || o.ResolutionHuman == nil {
		var ret string
		return ret
	}
	return *o.ResolutionHuman
}

// GetResolutionHumanOk returns a tuple with the ResolutionHuman field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoInfo) GetResolutionHumanOk() (*string, bool) {
	if o == nil || o.ResolutionHuman == nil {
		return nil, false
	}
	return o.ResolutionHuman, true
}

// HasResolutionHuman returns a boolean if a field has been set.
func (o *VideoInfo) HasResolutionHuman() bool {
	if o != nil && o.ResolutionHuman != nil {
		return true
	}

	return false
}

// SetResolutionHuman gets a reference to the given string and assigns it to the ResolutionHuman field.
func (o *VideoInfo) SetResolutionHuman(v string) {
	o.ResolutionHuman = &v
}

// GetBitrate returns the Bitrate field value if set, zero value otherwise.
func (o *VideoInfo) GetBitrate() string {
	if o == nil || o.Bitrate == nil {
		var ret string
		return ret
	}
	return *o.Bitrate
}

// GetBitrateOk returns a tuple with the Bitrate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoInfo) GetBitrateOk() (*string, bool) {
	if o == nil || o.Bitrate == nil {
		return nil, false
	}
	return o.Bitrate, true
}

// HasBitrate returns a boolean if a field has been set.
func (o *VideoInfo) HasBitrate() bool {
	if o != nil && o.Bitrate != nil {
		return true
	}

	return false
}

// SetBitrate gets a reference to the given string and assigns it to the Bitrate field.
func (o *VideoInfo) SetBitrate(v string) {
	o.Bitrate = &v
}

// GetDisplayAspectRation returns the DisplayAspectRation field value if set, zero value otherwise.
func (o *VideoInfo) GetDisplayAspectRation() string {
	if o == nil || o.DisplayAspectRation == nil {
		var ret string
		return ret
	}
	return *o.DisplayAspectRation
}

// GetDisplayAspectRationOk returns a tuple with the DisplayAspectRation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoInfo) GetDisplayAspectRationOk() (*string, bool) {
	if o == nil || o.DisplayAspectRation == nil {
		return nil, false
	}
	return o.DisplayAspectRation, true
}

// HasDisplayAspectRation returns a boolean if a field has been set.
func (o *VideoInfo) HasDisplayAspectRation() bool {
	if o != nil && o.DisplayAspectRation != nil {
		return true
	}

	return false
}

// SetDisplayAspectRation gets a reference to the given string and assigns it to the DisplayAspectRation field.
func (o *VideoInfo) SetDisplayAspectRation(v string) {
	o.DisplayAspectRation = &v
}

// GetAspectRatio returns the AspectRatio field value if set, zero value otherwise.
func (o *VideoInfo) GetAspectRatio() float32 {
	if o == nil || o.AspectRatio == nil {
		var ret float32
		return ret
	}
	return *o.AspectRatio
}

// GetAspectRatioOk returns a tuple with the AspectRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoInfo) GetAspectRatioOk() (*float32, bool) {
	if o == nil || o.AspectRatio == nil {
		return nil, false
	}
	return o.AspectRatio, true
}

// HasAspectRatio returns a boolean if a field has been set.
func (o *VideoInfo) HasAspectRatio() bool {
	if o != nil && o.AspectRatio != nil {
		return true
	}

	return false
}

// SetAspectRatio gets a reference to the given float32 and assigns it to the AspectRatio field.
func (o *VideoInfo) SetAspectRatio(v float32) {
	o.AspectRatio = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *VideoInfo) GetDuration() float32 {
	if o == nil || o.Duration == nil {
		var ret float32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoInfo) GetDurationOk() (*float32, bool) {
	if o == nil || o.Duration == nil {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *VideoInfo) HasDuration() bool {
	if o != nil && o.Duration != nil {
		return true
	}

	return false
}

// SetDuration gets a reference to the given float32 and assigns it to the Duration field.
func (o *VideoInfo) SetDuration(v float32) {
	o.Duration = &v
}

func (o VideoInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsHdr != nil {
		toSerialize["is_hdr"] = o.IsHdr
	}
	if o.IsMultiChannelAudio != nil {
		toSerialize["is_multi_channel_audio"] = o.IsMultiChannelAudio
	}
	if o.Width != nil {
		toSerialize["width"] = o.Width
	}
	if o.Height != nil {
		toSerialize["height"] = o.Height
	}
	if o.Fps != nil {
		toSerialize["fps"] = o.Fps
	}
	if o.CodecName != nil {
		toSerialize["codec_name"] = o.CodecName
	}
	if o.CodecType != nil {
		toSerialize["codec_type"] = o.CodecType
	}
	if o.ResolutionHuman != nil {
		toSerialize["resolution_human"] = o.ResolutionHuman
	}
	if o.Bitrate != nil {
		toSerialize["bitrate"] = o.Bitrate
	}
	if o.DisplayAspectRation != nil {
		toSerialize["display_aspect_ration"] = o.DisplayAspectRation
	}
	if o.AspectRatio != nil {
		toSerialize["aspect_ratio"] = o.AspectRatio
	}
	if o.Duration != nil {
		toSerialize["duration"] = o.Duration
	}
	return json.Marshal(toSerialize)
}

type NullableVideoInfo struct {
	value *VideoInfo
	isSet bool
}

func (v NullableVideoInfo) Get() *VideoInfo {
	return v.value
}

func (v *NullableVideoInfo) Set(val *VideoInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVideoInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVideoInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVideoInfo(val *VideoInfo) *NullableVideoInfo {
	return &NullableVideoInfo{value: val, isSet: true}
}

func (v NullableVideoInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVideoInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


