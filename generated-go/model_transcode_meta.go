/*
GOOVE

GOOVI API Design Spec

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// TranscodeMeta struct for TranscodeMeta
type TranscodeMeta struct {
	ProcessStartAt *time.Time `json:"process_start_at,omitempty"`
	ProcessEndAt *time.Time `json:"process_end_at,omitempty"`
	ProcessDuration *float32 `json:"process_duration,omitempty"`
	TranscodeStartAt *time.Time `json:"transcode_start_at,omitempty"`
	TranscodeEndAt *time.Time `json:"transcode_end_at,omitempty"`
	TranscodeDuration *float32 `json:"transcode_duration,omitempty"`
}

// NewTranscodeMeta instantiates a new TranscodeMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTranscodeMeta() *TranscodeMeta {
	this := TranscodeMeta{}
	return &this
}

// NewTranscodeMetaWithDefaults instantiates a new TranscodeMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTranscodeMetaWithDefaults() *TranscodeMeta {
	this := TranscodeMeta{}
	return &this
}

// GetProcessStartAt returns the ProcessStartAt field value if set, zero value otherwise.
func (o *TranscodeMeta) GetProcessStartAt() time.Time {
	if o == nil || o.ProcessStartAt == nil {
		var ret time.Time
		return ret
	}
	return *o.ProcessStartAt
}

// GetProcessStartAtOk returns a tuple with the ProcessStartAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscodeMeta) GetProcessStartAtOk() (*time.Time, bool) {
	if o == nil || o.ProcessStartAt == nil {
		return nil, false
	}
	return o.ProcessStartAt, true
}

// HasProcessStartAt returns a boolean if a field has been set.
func (o *TranscodeMeta) HasProcessStartAt() bool {
	if o != nil && o.ProcessStartAt != nil {
		return true
	}

	return false
}

// SetProcessStartAt gets a reference to the given time.Time and assigns it to the ProcessStartAt field.
func (o *TranscodeMeta) SetProcessStartAt(v time.Time) {
	o.ProcessStartAt = &v
}

// GetProcessEndAt returns the ProcessEndAt field value if set, zero value otherwise.
func (o *TranscodeMeta) GetProcessEndAt() time.Time {
	if o == nil || o.ProcessEndAt == nil {
		var ret time.Time
		return ret
	}
	return *o.ProcessEndAt
}

// GetProcessEndAtOk returns a tuple with the ProcessEndAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscodeMeta) GetProcessEndAtOk() (*time.Time, bool) {
	if o == nil || o.ProcessEndAt == nil {
		return nil, false
	}
	return o.ProcessEndAt, true
}

// HasProcessEndAt returns a boolean if a field has been set.
func (o *TranscodeMeta) HasProcessEndAt() bool {
	if o != nil && o.ProcessEndAt != nil {
		return true
	}

	return false
}

// SetProcessEndAt gets a reference to the given time.Time and assigns it to the ProcessEndAt field.
func (o *TranscodeMeta) SetProcessEndAt(v time.Time) {
	o.ProcessEndAt = &v
}

// GetProcessDuration returns the ProcessDuration field value if set, zero value otherwise.
func (o *TranscodeMeta) GetProcessDuration() float32 {
	if o == nil || o.ProcessDuration == nil {
		var ret float32
		return ret
	}
	return *o.ProcessDuration
}

// GetProcessDurationOk returns a tuple with the ProcessDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscodeMeta) GetProcessDurationOk() (*float32, bool) {
	if o == nil || o.ProcessDuration == nil {
		return nil, false
	}
	return o.ProcessDuration, true
}

// HasProcessDuration returns a boolean if a field has been set.
func (o *TranscodeMeta) HasProcessDuration() bool {
	if o != nil && o.ProcessDuration != nil {
		return true
	}

	return false
}

// SetProcessDuration gets a reference to the given float32 and assigns it to the ProcessDuration field.
func (o *TranscodeMeta) SetProcessDuration(v float32) {
	o.ProcessDuration = &v
}

// GetTranscodeStartAt returns the TranscodeStartAt field value if set, zero value otherwise.
func (o *TranscodeMeta) GetTranscodeStartAt() time.Time {
	if o == nil || o.TranscodeStartAt == nil {
		var ret time.Time
		return ret
	}
	return *o.TranscodeStartAt
}

// GetTranscodeStartAtOk returns a tuple with the TranscodeStartAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscodeMeta) GetTranscodeStartAtOk() (*time.Time, bool) {
	if o == nil || o.TranscodeStartAt == nil {
		return nil, false
	}
	return o.TranscodeStartAt, true
}

// HasTranscodeStartAt returns a boolean if a field has been set.
func (o *TranscodeMeta) HasTranscodeStartAt() bool {
	if o != nil && o.TranscodeStartAt != nil {
		return true
	}

	return false
}

// SetTranscodeStartAt gets a reference to the given time.Time and assigns it to the TranscodeStartAt field.
func (o *TranscodeMeta) SetTranscodeStartAt(v time.Time) {
	o.TranscodeStartAt = &v
}

// GetTranscodeEndAt returns the TranscodeEndAt field value if set, zero value otherwise.
func (o *TranscodeMeta) GetTranscodeEndAt() time.Time {
	if o == nil || o.TranscodeEndAt == nil {
		var ret time.Time
		return ret
	}
	return *o.TranscodeEndAt
}

// GetTranscodeEndAtOk returns a tuple with the TranscodeEndAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscodeMeta) GetTranscodeEndAtOk() (*time.Time, bool) {
	if o == nil || o.TranscodeEndAt == nil {
		return nil, false
	}
	return o.TranscodeEndAt, true
}

// HasTranscodeEndAt returns a boolean if a field has been set.
func (o *TranscodeMeta) HasTranscodeEndAt() bool {
	if o != nil && o.TranscodeEndAt != nil {
		return true
	}

	return false
}

// SetTranscodeEndAt gets a reference to the given time.Time and assigns it to the TranscodeEndAt field.
func (o *TranscodeMeta) SetTranscodeEndAt(v time.Time) {
	o.TranscodeEndAt = &v
}

// GetTranscodeDuration returns the TranscodeDuration field value if set, zero value otherwise.
func (o *TranscodeMeta) GetTranscodeDuration() float32 {
	if o == nil || o.TranscodeDuration == nil {
		var ret float32
		return ret
	}
	return *o.TranscodeDuration
}

// GetTranscodeDurationOk returns a tuple with the TranscodeDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranscodeMeta) GetTranscodeDurationOk() (*float32, bool) {
	if o == nil || o.TranscodeDuration == nil {
		return nil, false
	}
	return o.TranscodeDuration, true
}

// HasTranscodeDuration returns a boolean if a field has been set.
func (o *TranscodeMeta) HasTranscodeDuration() bool {
	if o != nil && o.TranscodeDuration != nil {
		return true
	}

	return false
}

// SetTranscodeDuration gets a reference to the given float32 and assigns it to the TranscodeDuration field.
func (o *TranscodeMeta) SetTranscodeDuration(v float32) {
	o.TranscodeDuration = &v
}

func (o TranscodeMeta) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ProcessStartAt != nil {
		toSerialize["process_start_at"] = o.ProcessStartAt
	}
	if o.ProcessEndAt != nil {
		toSerialize["process_end_at"] = o.ProcessEndAt
	}
	if o.ProcessDuration != nil {
		toSerialize["process_duration"] = o.ProcessDuration
	}
	if o.TranscodeStartAt != nil {
		toSerialize["transcode_start_at"] = o.TranscodeStartAt
	}
	if o.TranscodeEndAt != nil {
		toSerialize["transcode_end_at"] = o.TranscodeEndAt
	}
	if o.TranscodeDuration != nil {
		toSerialize["transcode_duration"] = o.TranscodeDuration
	}
	return json.Marshal(toSerialize)
}

type NullableTranscodeMeta struct {
	value *TranscodeMeta
	isSet bool
}

func (v NullableTranscodeMeta) Get() *TranscodeMeta {
	return v.value
}

func (v *NullableTranscodeMeta) Set(val *TranscodeMeta) {
	v.value = val
	v.isSet = true
}

func (v NullableTranscodeMeta) IsSet() bool {
	return v.isSet
}

func (v *NullableTranscodeMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTranscodeMeta(val *TranscodeMeta) *NullableTranscodeMeta {
	return &NullableTranscodeMeta{value: val, isSet: true}
}

func (v NullableTranscodeMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTranscodeMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


