/*
GOOVE

GOOVI API Design Spec

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AdaptiveStreamingInfo struct for AdaptiveStreamingInfo
type AdaptiveStreamingInfo struct {
	Type *string `json:"type,omitempty"`
	FileType *string `json:"file_type,omitempty"`
	IsVideo *bool `json:"is_video,omitempty"`
	DisplayAspectRatio NullableString `json:"display_aspect_ratio,omitempty"`
	AspectRatio NullableFloat32 `json:"aspect_ratio,omitempty"`
	Duration *float32 `json:"duration,omitempty"`
	Fps NullableFloat32 `json:"fps,omitempty"`
}

// NewAdaptiveStreamingInfo instantiates a new AdaptiveStreamingInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdaptiveStreamingInfo() *AdaptiveStreamingInfo {
	this := AdaptiveStreamingInfo{}
	return &this
}

// NewAdaptiveStreamingInfoWithDefaults instantiates a new AdaptiveStreamingInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdaptiveStreamingInfoWithDefaults() *AdaptiveStreamingInfo {
	this := AdaptiveStreamingInfo{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AdaptiveStreamingInfo) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdaptiveStreamingInfo) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AdaptiveStreamingInfo) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AdaptiveStreamingInfo) SetType(v string) {
	o.Type = &v
}

// GetFileType returns the FileType field value if set, zero value otherwise.
func (o *AdaptiveStreamingInfo) GetFileType() string {
	if o == nil || o.FileType == nil {
		var ret string
		return ret
	}
	return *o.FileType
}

// GetFileTypeOk returns a tuple with the FileType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdaptiveStreamingInfo) GetFileTypeOk() (*string, bool) {
	if o == nil || o.FileType == nil {
		return nil, false
	}
	return o.FileType, true
}

// HasFileType returns a boolean if a field has been set.
func (o *AdaptiveStreamingInfo) HasFileType() bool {
	if o != nil && o.FileType != nil {
		return true
	}

	return false
}

// SetFileType gets a reference to the given string and assigns it to the FileType field.
func (o *AdaptiveStreamingInfo) SetFileType(v string) {
	o.FileType = &v
}

// GetIsVideo returns the IsVideo field value if set, zero value otherwise.
func (o *AdaptiveStreamingInfo) GetIsVideo() bool {
	if o == nil || o.IsVideo == nil {
		var ret bool
		return ret
	}
	return *o.IsVideo
}

// GetIsVideoOk returns a tuple with the IsVideo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdaptiveStreamingInfo) GetIsVideoOk() (*bool, bool) {
	if o == nil || o.IsVideo == nil {
		return nil, false
	}
	return o.IsVideo, true
}

// HasIsVideo returns a boolean if a field has been set.
func (o *AdaptiveStreamingInfo) HasIsVideo() bool {
	if o != nil && o.IsVideo != nil {
		return true
	}

	return false
}

// SetIsVideo gets a reference to the given bool and assigns it to the IsVideo field.
func (o *AdaptiveStreamingInfo) SetIsVideo(v bool) {
	o.IsVideo = &v
}

// GetDisplayAspectRatio returns the DisplayAspectRatio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdaptiveStreamingInfo) GetDisplayAspectRatio() string {
	if o == nil || o.DisplayAspectRatio.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayAspectRatio.Get()
}

// GetDisplayAspectRatioOk returns a tuple with the DisplayAspectRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdaptiveStreamingInfo) GetDisplayAspectRatioOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplayAspectRatio.Get(), o.DisplayAspectRatio.IsSet()
}

// HasDisplayAspectRatio returns a boolean if a field has been set.
func (o *AdaptiveStreamingInfo) HasDisplayAspectRatio() bool {
	if o != nil && o.DisplayAspectRatio.IsSet() {
		return true
	}

	return false
}

// SetDisplayAspectRatio gets a reference to the given NullableString and assigns it to the DisplayAspectRatio field.
func (o *AdaptiveStreamingInfo) SetDisplayAspectRatio(v string) {
	o.DisplayAspectRatio.Set(&v)
}
// SetDisplayAspectRatioNil sets the value for DisplayAspectRatio to be an explicit nil
func (o *AdaptiveStreamingInfo) SetDisplayAspectRatioNil() {
	o.DisplayAspectRatio.Set(nil)
}

// UnsetDisplayAspectRatio ensures that no value is present for DisplayAspectRatio, not even an explicit nil
func (o *AdaptiveStreamingInfo) UnsetDisplayAspectRatio() {
	o.DisplayAspectRatio.Unset()
}

// GetAspectRatio returns the AspectRatio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdaptiveStreamingInfo) GetAspectRatio() float32 {
	if o == nil || o.AspectRatio.Get() == nil {
		var ret float32
		return ret
	}
	return *o.AspectRatio.Get()
}

// GetAspectRatioOk returns a tuple with the AspectRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdaptiveStreamingInfo) GetAspectRatioOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AspectRatio.Get(), o.AspectRatio.IsSet()
}

// HasAspectRatio returns a boolean if a field has been set.
func (o *AdaptiveStreamingInfo) HasAspectRatio() bool {
	if o != nil && o.AspectRatio.IsSet() {
		return true
	}

	return false
}

// SetAspectRatio gets a reference to the given NullableFloat32 and assigns it to the AspectRatio field.
func (o *AdaptiveStreamingInfo) SetAspectRatio(v float32) {
	o.AspectRatio.Set(&v)
}
// SetAspectRatioNil sets the value for AspectRatio to be an explicit nil
func (o *AdaptiveStreamingInfo) SetAspectRatioNil() {
	o.AspectRatio.Set(nil)
}

// UnsetAspectRatio ensures that no value is present for AspectRatio, not even an explicit nil
func (o *AdaptiveStreamingInfo) UnsetAspectRatio() {
	o.AspectRatio.Unset()
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *AdaptiveStreamingInfo) GetDuration() float32 {
	if o == nil || o.Duration == nil {
		var ret float32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdaptiveStreamingInfo) GetDurationOk() (*float32, bool) {
	if o == nil || o.Duration == nil {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *AdaptiveStreamingInfo) HasDuration() bool {
	if o != nil && o.Duration != nil {
		return true
	}

	return false
}

// SetDuration gets a reference to the given float32 and assigns it to the Duration field.
func (o *AdaptiveStreamingInfo) SetDuration(v float32) {
	o.Duration = &v
}

// GetFps returns the Fps field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdaptiveStreamingInfo) GetFps() float32 {
	if o == nil || o.Fps.Get() == nil {
		var ret float32
		return ret
	}
	return *o.Fps.Get()
}

// GetFpsOk returns a tuple with the Fps field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdaptiveStreamingInfo) GetFpsOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Fps.Get(), o.Fps.IsSet()
}

// HasFps returns a boolean if a field has been set.
func (o *AdaptiveStreamingInfo) HasFps() bool {
	if o != nil && o.Fps.IsSet() {
		return true
	}

	return false
}

// SetFps gets a reference to the given NullableFloat32 and assigns it to the Fps field.
func (o *AdaptiveStreamingInfo) SetFps(v float32) {
	o.Fps.Set(&v)
}
// SetFpsNil sets the value for Fps to be an explicit nil
func (o *AdaptiveStreamingInfo) SetFpsNil() {
	o.Fps.Set(nil)
}

// UnsetFps ensures that no value is present for Fps, not even an explicit nil
func (o *AdaptiveStreamingInfo) UnsetFps() {
	o.Fps.Unset()
}

func (o AdaptiveStreamingInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.FileType != nil {
		toSerialize["file_type"] = o.FileType
	}
	if o.IsVideo != nil {
		toSerialize["is_video"] = o.IsVideo
	}
	if o.DisplayAspectRatio.IsSet() {
		toSerialize["display_aspect_ratio"] = o.DisplayAspectRatio.Get()
	}
	if o.AspectRatio.IsSet() {
		toSerialize["aspect_ratio"] = o.AspectRatio.Get()
	}
	if o.Duration != nil {
		toSerialize["duration"] = o.Duration
	}
	if o.Fps.IsSet() {
		toSerialize["fps"] = o.Fps.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAdaptiveStreamingInfo struct {
	value *AdaptiveStreamingInfo
	isSet bool
}

func (v NullableAdaptiveStreamingInfo) Get() *AdaptiveStreamingInfo {
	return v.value
}

func (v *NullableAdaptiveStreamingInfo) Set(val *AdaptiveStreamingInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableAdaptiveStreamingInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableAdaptiveStreamingInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdaptiveStreamingInfo(val *AdaptiveStreamingInfo) *NullableAdaptiveStreamingInfo {
	return &NullableAdaptiveStreamingInfo{value: val, isSet: true}
}

func (v NullableAdaptiveStreamingInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdaptiveStreamingInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


