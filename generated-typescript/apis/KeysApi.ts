/* tslint:disable */
/* eslint-disable */
/**
 * GOOVE
 * GOOVI API Design Spec
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    CreateTranscode,
    CreateTranscodeFromJSON,
    CreateTranscodeToJSON,
} from '../models';

export interface TranscodeDeleteRequest {
    id?: string;
}

export interface TranscodePostRequest {
    createTranscode?: CreateTranscode;
}

/**
 * 
 */
export class KeysApi extends runtime.BaseAPI {

    /**
     * Cancel Queue
     */
    async transcodeDeleteRaw(requestParameters: TranscodeDeleteRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        if (requestParameters.id !== undefined) {
            queryParameters['id'] = requestParameters.id;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["X-API-KEY"] = this.configuration.apiKey("X-API-KEY"); // ApiKey authentication
        }

        const response = await this.request({
            path: `/transcode`,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Cancel Queue
     */
    async transcodeDelete(requestParameters: TranscodeDeleteRequest = {}, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<void> {
        await this.transcodeDeleteRaw(requestParameters, initOverrides);
    }

    /**
     * Create Queue
     */
    async transcodePostRaw(requestParameters: TranscodePostRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["X-API-KEY"] = this.configuration.apiKey("X-API-KEY"); // ApiKey authentication
        }

        const response = await this.request({
            path: `/transcode`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateTranscodeToJSON(requestParameters.createTranscode),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Create Queue
     */
    async transcodePost(requestParameters: TranscodePostRequest = {}, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<void> {
        await this.transcodePostRaw(requestParameters, initOverrides);
    }

}
